apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
spec:
  selector:
    matchLabels:
      app: mongodb # This has to match .spec.template.metadata.labels
  serviceName: "mongodb"
  replicas: 1 # by default is 1
  minReadySeconds: 10 # by default is 0
  template:
    metadata:
      labels:
        app: mongodb # This has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: mongodb
          image: mongo # Official mongo image https://hub.docker.com/_/mongo
          ports:
            - containerPort: 27017 # Default port number
              name: mongo-port
          env:
            - name: MONGO_INITDB_ROOT_USERNAME # The env variable that contains the username used to create the admin user
              valueFrom:
                secretKeyRef:
                  name: db-admin # The secret we created in previous step
                  key: username
            - name: MONGO_INITDB_ROOT_PASSWORD # The env variable that contains the password to create the admin user
              valueFrom:
                secretKeyRef:
                  name: db-admin # The secret we created in previous step
                  key: password
          volumeMounts: # The path where the volume will be mounted
            - name: mongodb-volume
              mountPath: /data/db
  volumeClaimTemplates: # This template is used to dynamically create volumes
    - metadata:
        name: mongodb-volume
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: "local-storage" # Here goes your storage class, created on step 1.
        resources:
          requests:
            storage: 1Gi # The storage capacity. Using International System Units, https://en.wikipedia.org/wiki/Units_of_information
